{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"stroke",
				"stroke_width"
			],
			[
				"ro",
				"rotation_delta"
			],
			[
				"roation",
				"rotation_origin"
			],
			[
				"followPath",
				"followPathBehavior"
			],
			[
				"get",
				"getLeft"
			],
			[
				"tra",
				"transform"
			],
			[
				"insta",
				"instance_literals"
			],
			[
				"to",
				"toJSON"
			],
			[
				"rotation",
				"rotationOrigin"
			],
			[
				"node",
				"nodeParent"
			],
			[
				"co",
				"concatenate"
			],
			[
				"mid",
				"midpoint"
			],
			[
				"follow",
				"FollowPathBehavior"
			],
			[
				"instan",
				"instanceParentIndex"
			],
			[
				"instanc",
				"instance_literals"
			],
			[
				"instances",
				"instances"
			],
			[
				"instance",
				"instanceParentIndex"
			],
			[
				"inst",
				"instanceParentIndex"
			],
			[
				"beh",
				"behaviorNode"
			],
			[
				"method",
				"methodName"
			],
			[
				"clear",
				"clearScaffolds"
			],
			[
				"pap",
				"PaperManager"
			],
			[
				"strok",
				"strokeColor"
			],
			[
				"key",
				"keyCode"
			],
			[
				"curre",
				"currentNode"
			],
			[
				"pare",
				"instanceParentIndex"
			],
			[
				"event",
				"event_bus"
			],
			[
				"inter",
				"intersections"
			],
			[
				"act",
				"activeLayer"
			],
			[
				"ex",
				"excludeIndex"
			],
			[
				"remo",
				"removeInstanceAt"
			],
			[
				"Path",
				"pathChild"
			],
			[
				"le",
				"length-1"
			],
			[
				"scaff",
				"scaffoldLine"
			],
			[
				"Vec",
				"Vec2"
			],
			[
				"de",
				"deps"
			],
			[
				"con",
				"conditional_line"
			],
			[
				"even",
				"event_bus"
			],
			[
				"tar",
				"targetVal"
			],
			[
				"num",
				"numInstances"
			],
			[
				"curren",
				"currentNode"
			],
			[
				"cop",
				"copyBehavior"
			],
			[
				"be",
				"behaviorNode"
			],
			[
				"poi",
				"pointBC"
			],
			[
				"Poi",
				"pointAC"
			],
			[
				"sca",
				"scaffold"
			],
			[
				"a",
				"anchor"
			],
			[
				"hide",
				"hideMenu"
			],
			[
				"root",
				"rootRender"
			],
			[
				"Beh",
				"behaviorManagerModel"
			],
			[
				"contains",
				"containsPath"
			],
			[
				"conta",
				"containsPath"
			],
			[
				"render",
				"renderSignature"
			],
			[
				"curr",
				"currentNode"
			],
			[
				"fu",
				"function"
			],
			[
				"name",
				"nameVal"
			],
			[
				"symbo",
				"symbol_literal"
			],
			[
				"current",
				"currentPathNode"
			],
			[
				"path",
				"path_literal"
			],
			[
				"canvas",
				"canvasDblclick"
			],
			[
				"dis",
				"distributeBehavior"
			],
			[
				"cav",
				"canvasMousewheel"
			],
			[
				"meth",
				"methodName"
			],
			[
				"pro",
				"prototype"
			],
			[
				"intersection",
				"intersectionFound"
			],
			[
				"interse",
				"intersectionFound"
			],
			[
				"up",
				"updateInstances"
			],
			[
				"create",
				"createInstances"
			],
			[
				"paren",
				"nodeParent"
			],
			[
				"update",
				"updateMembers"
			],
			[
				"che",
				"checkIntersections"
			],
			[
				"currently",
				"currentlySelected"
			],
			[
				"mousedown",
				"mousedown"
			],
			[
				"pad",
				"padding-right"
			],
			[
				"mar",
				"margin-right"
			],
			[
				"margin",
				"margin-left"
			],
			[
				"add",
				"addChildNode"
			],
			[
				"str",
				"strokeColor"
			],
			[
				"Pa",
				"PaperManager"
			],
			[
				"Pp",
				"paper"
			],
			[
				"paper",
				"PaperMananger"
			],
			[
				"GE",
				"GeometryNode"
			],
			[
				"di",
				"display"
			],
			[
				"marg",
				"margin-bottom"
			],
			[
				"p",
				"padding"
			],
			[
				"bac",
				"background-color"
			],
			[
				"margi",
				"margin-top"
			],
			[
				"ba",
				"background-color"
			],
			[
				"list",
				"list-style-type"
			],
			[
				"i",
				"inline"
			],
			[
				"Geom",
				"GeometryNode"
			]
		]
	},
	"buffers":
	[
		{
			"file": "js/src/models/tools/SelectToolModel.js",
			"settings":
			{
				"buffer_size": 10666,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/data/PolygonNode.js",
			"settings":
			{
				"buffer_size": 1703,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/data/RectNode.js",
			"settings":
			{
				"buffer_size": 2066,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/utils/PFloat.js",
			"settings":
			{
				"buffer_size": 2927,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/utils/PPoint.js",
			"settings":
			{
				"buffer_size": 4961,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/data/Instance.js",
			"settings":
			{
				"buffer_size": 28336,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/utils/PColor.js",
			"settings":
			{
				"buffer_size": 4312,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/data/PathNode.js",
			"settings":
			{
				"buffer_size": 7863,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/data/ListNode.js",
			"settings":
			{
				"buffer_size": 12393,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/data/ListSampler.js",
			"settings":
			{
				"buffer_size": 1051,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*Visitor.js\n * external tree visitor base implementation\n * used to traverse parse tree and build scenegraph of\n * instances for display to user\n */\n\ndefine([\n	'underscore',\n	'backbone',\n	'models/data/Instance',\n	'models/data/functions/FunctionNode'\n\n\n], function(_, Backbone, Instance, FunctionNode) {\n	//datastructure to store path functions\n	//TODO: make linked list eventually\n\n	//stores para lists\n	var lists;\n	var renderQueue = [];\n	var store = 0;\n	var compile = 1;\n	var render = 2;\n	var visit = 3;\n\n\n	var rootNode, currentNode;\n	var Visitor = Backbone.Model.extend({\n		defaults: {},\n\n		initialize: function() {\n			//setup root node\n			rootNode = new FunctionNode();\n			rootNode.open();\n			lists = rootNode.lists;\n			rootNode.set('name', 'root');\n			this.listenTo(rootNode, 'parseJSON', this.parseJSON);\n			currentNode = rootNode;\n		},\n\n\n		/*resetPrototypes\n		 * resets the prototypes recursively.\n		 * Called before visiting the root node\n		 */\n		resetPrototypes: function() {\n\n			//for (var i = 0; i < renderQueue.length; i++) {\n			//renderQueue[i].reset();\n			//}\n			renderQueue = [];\n		},\n\n		/* getPrototypeById \n		 * returns prototype by id\n		 */\n		getPrototypeById: function(root, id) {\n			var match = null;\n			this.visitBfs(root, function(node) {\n				if (node.get('type') === 'root') {\n					return; // do not process roots\n				}\n				var pId = node.get('id');\n				if (pId === id) {\n					match = node;\n					return node;\n				}\n			});\n			return match;\n		},\n\n		/* computeLists\n		 * method to begin rendering process of lists\n		 * following rendering of all non-list items in the tree\n		 * (calls visit on each member of listsToCompile array with render argument set\n		 * to true\n		 */\n\n		compileLists: function() {\n			var state_data = {\n				list: compile\n			};\n			for (var i = 0; i < lists.length; i++) {\n				this.visit(lists[i], null, state_data);\n			}\n		},\n\n		compileFunctions: function() {\n			var state_data = {\n				func: compile,\n				instance: compile\n			};\n			var functions = this.functionManager.functions;\n			for (var i = 0; i < functions.length; i++) {\n				this.visit(functions[i], null, state_data);\n			}\n		},\n\n		compileInstances: function() {\n\n			var state_data = {\n				list: store,\n				instance: compile,\n				func: compile,\n			};\n\n			this.visit(currentNode, null, state_data);\n\n		},\n\n		render: function(root) {\n			for (var i = 0; i < renderQueue.length; i++) {\n\n				renderQueue[i].render();\n\n			}\n		},\n\n\n\n		removeInstance: function(node, departureNode, target) {\n			if (!node) {\n				node = currentNode;\n			}\n			if (node === target) {\n\n\n				node.deleteSelf();\n				for (var j = 0; j < lists.length; j++) {\n					if (lists[j] === node) {\n						lists.splice(j, 1);\n						lists = lists.concat(node.getListMembers());\n						node.removeAllMembers();\n						break;\n					}\n				}\n				if (departureNode) {\n					departureNode.removeChildNode(node);\n				}\n\n			} else {\n				for (var i = 0; i < node.children.length; i++) {\n					node.children[i].visit(this, 'removeInstance', node, target);\n				}\n			}\n		},\n\n		/*visit\n		 * visitor method to walk the tree and compute and render each\n		 * node on the screen according to type;\n		 */\n		visit: function(node, departureNode, state_data) {\n\n			node.set({\n				visited: true\n			});\n			switch (node.get('type')) {\n				case 'list':\n				case 'sampler':\n					this.visitList(node, departureNode, state_data);\n					break;\n				case 'function':\n					this.visitFunction(node, departureNode, state_data);\n					break;\n				default:\n					this.visitInstance(node, departureNode, state_data);\n					break;\n			}\n\n		},\n\n		/*visitList- THIS IS SLOW- SPEED IT UP\n		 * visitor method for computing lists\n		 * if render then computes the list's dimensions based on its members\n		 * and draws it on the screen.\n		 * otherwise, stashes the list in an array for rendering on a second pass.\n		 * filters the array to ensure that it only contains lists with no parent list\n		 */\n		visitList: function(node, departureNode, state_data) {\n			var member;\n			var state = state_data.list;\n			if (state === store) {\n				for (var k = 0; k < node.children.length; k++) {\n					node.children[k].visit(this, 'visit', node, state_data);\n				}\n			} else if (state === compile) {\n				node.reset();\n				node.compile();\n				renderQueue.push(node);\n				var s_d = {\n					list: visit\n				};\n				for (var i = 0; i < node.members.length; i++) {\n					member = node.members[i];\n					if (member.get('type') === 'list' || member.get('type') === 'sampler') {\n						member.visit(this, 'visit', node, s_d);\n					}\n				}\n			} else if (state == visit) {\n				renderQueue.push(node);\n				for (var j = 0; j < node.members.length; j++) {\n					member = node.members[j];\n					if (member.get('type') === 'list' || member.get('type') === 'sampler') {\n						member.visit(this, 'visit', node, state_data);\n					}\n				}\n			}\n\n			return;\n\n		},\n\n		/* visitFunction\n		 * called for visit to function node\n		 */\n		visitFunction: function(node, departureNode, state_data) {\n			var state = state_data.func;\n			switch (state) {\n				case compile:\n					node.reset();\n					node.compile();\n					renderQueue.push(node);\n\n					var children = node.children;\n					for (var i = 0; i < children.length; i++) {\n						if (!node.get('open') && node.get('called')) {\n							if (children[i].isReturned) {\n								children[i].visit(this, 'visit', node, state_data);\n							}\n						} else if (node.get('open')) {\n							children[i].visit(this, 'visit', node, state_data);\n						}\n					}\n\n					break;\n			}\n		},\n		/* visitInstance\n		 * called for visit to instance node\n		 */\n		visitInstance: function(node, departureNode, state_data) {\n			var state = state_data.instance;\n			var children = node.children;\n\n			switch (state) {\n				case compile:\n					node.reset();\n					node.compile();\n					renderQueue.push(node);\n					for (var i = 0; i < children.length; i++) {\n						children[i].visit(this, 'visit', node, state_data);\n					}\n					break;\n			}\n\n\n		},\n\n\n		//=======function managment methods==========//\n		//need to put something in here where you can't have an item in a function that is also in an opened list?\n		addFunction: function(selected_shapes) {\n			lists = lists.filter(function(item) {\n				console.log('removing list from current list tracker');\n				return selected_shapes.indexOf(item) === -1;\n			});\n			this.functionManager.createFunction('my_function', selected_shapes);\n		},\n\n		createParams: function(selected_shapes) {\n			for (var i = 0; i < selected_shapes.length; i++) {\n				this.functionManager.addParamToFunction(currentNode, selected_shapes[i]);\n			}\n		},\n\n		addShape: function(instance, parent) {\n			if (instance) {\n				if (parent) {\n					parent.addChildNode(instance);\n				} else {\n					currentNode.addChildNode(instance);\n				}\n				this.addToOpenLists(instance);\n			}\n		},\n\n\n		//=======list heirarchy managment methods==========//\n\n		/*addList\n		 *adds a list to the closedlist array and removes any items\n		 * on the array which are members of the added list\n		 */\n		addList: function(list) {\n			\n			if (!this.addToOpenLists(list)) {\n				for (var i = lists.length - 1; i >= 0; i--) {\n					if (list.hasMember(lists[i], true)) {\n						lists.splice(i, 1);\n					}\n				}\n				lists.push(list);\n			}\n			for (var j = lists.length - 1; j >= 0; j--) {\n				lists[j].printMembers();\n			}\n\n		},\n\n		/* addToOpenLists\n		 * attempts to add a newly created instance to any open lists\n		 */\n		addToOpenLists: function(instance) {\n			var addedToList = false;\n			for (var i = 0; i < lists.length; i++) {\n				addedToList = addedToList ? true : lists[i].addMemberToOpen(instance);\n			}\n			return addedToList;\n		},\n\n\n\n		/*removeList\n		 *removes list item recursively checking sublists\n		 */\n		removeList: function(list) {\n			for (var i = 0; i < lists.length; i++) {\n				lists[i].recRemoveMember(list);\n\n			}\n		},\n\n		/* filterSelection\n		 * returns array of selected objects based on selected instances\n		 * and state of lists which contain those objects(open vs closed)\n		 */\n		filterSelection: function(lInstance) {\n			var sInstances = [];\n			var itemFound = false;\n			for (var i = 0; i < lists.length; i++) {\n				var item = lists[i].getMember(lInstance);\n\n				if (item) {\n					sInstances.push(item);\n					itemFound = true;\n				}\n			}\n			//add in originally selected index if no lists have been added\n			if (!itemFound) {\n				sInstances.push(lInstance);\n			}\n			return sInstances;\n		},\n\n		/* toggleItems\n		 * toggles item funcitonality according to item type\n		 */\n		toggleItems: function(items) {\n			var lastSelected = items[items.length - 1];\n			switch (lastSelected.get('type')) {\n				case 'function':\n					this.functionManager.callFunction(lastSelected);\n					break;\n				default:\n					break;\n			}\n		},\n\n		/* toggleOpen\n		 * returns children of opened function or members of opened lists\n		 */\n		toggleOpen: function(items) {\n			var functions = items.filter(function(item) {\n				return item.get('type') === 'function';\n			});\n			if (functions.length > 0) {\n				this.closeAllLists();\n				var data = this.functionManager.toggleOpenFunctions(currentNode, functions[functions.length - 1]);\n				lists = data.lists;\n				currentNode = data.currentNode;\n				return data.toSelect;\n			} else {\n				return this.toggleOpenLists(items);\n			}\n		},\n\n		/* toggleClosed\n		 * closes open functions or selected open lists\n		 */\n		toggleClosed: function(items) {\n			//TODO: fix this so it closes selected open lists first...\n			var lists = items.filter(function(item) {\n				return (item.get('type') === 'list' || item.get('type') === 'sampler');\n			});\n			if (lists.length > 0) {\n				return this.toggleClosedLists(items);\n			} else {\n				this.closeAllLists();\n				var data = this.functionManager.toggleClosedFunctions(currentNode, rootNode);\n				currentNode = data.currentNode;\n				lists = currentNode.lists;\n				return data.toSelect;\n			}\n		},\n\n		/* toggleClosedLists\n		 * closes selected open lists\n		 */\n		toggleClosedLists: function(items) {\n			var toggledLists = [];\n			var returnedLists = [];\n			for (var j = 0; j < items.length; j++) {\n				var item = items[j];\n				for (var i = 0; i < lists.length; i++) {\n					if ($.inArray(lists[i], toggledLists) === -1) {\n						var r = lists[i].toggleClosed(item);\n						if (r) {\n							returnedLists = returnedLists.concat(r);\n							toggledLists.push(lists[i]);\n						}\n					}\n				}\n			}\n			return returnedLists;\n		},\n\n		closeAllLists: function() {\n			for (var i = 0; i < lists.length; i++) {\n				lists[i].closeAllMembers();\n				lists[i].set('open', false);\n			}\n		},\n\n\n		toggleOpenLists: function(items) {\n\n			var openedLists = [];\n			var openedItems = [];\n			var members = [];\n			for (var j = 0; j < items.length; j++) {\n				var item = items[j];\n				for (var i = 0; i < lists.length; i++) {\n					if ($.inArray(lists[i], openedLists) === -1) {\n						var r = lists[i].toggleOpen(item);\n						if (r) {\n							openedItems = openedItems.concat(r);\n							openedLists.push(lists[i]);\n						}\n\n					}\n				}\n			}\n			for (var k = 0; k < openedItems.length; k++) {\n				members = members.concat(openedLists[k].members);\n\n			}\n			return members;\n		},\n\n\n\n	});\n\n	return Visitor;\n\n\n});",
			"file": "js/src/models/data/Visitor.js",
			"file_size": 11052,
			"file_write_time": 1427825031000000,
			"settings":
			{
				"buffer_size": 11055,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/StateManagerModel.js",
			"settings":
			{
				"buffer_size": 25403,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/data/functions/FunctionNode.js",
			"settings":
			{
				"buffer_size": 6114,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/data/functions/FunctionManager.js",
			"settings":
			{
				"buffer_size": 4975,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 67.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"js",
				"JSHint"
			],
			[
				"j",
				"JSHint"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 514.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/Julia/Documents/para/js/src/models/data/functions/FunctionManager.js",
		"/Users/Julia/Documents/6.813/PS2/src/board.js",
		"/Users/Julia/Documents/6.813/PS2/src/boardEvent.js",
		"/Users/Julia/Documents/6.813/PS2/src/checker.js",
		"/Users/Julia/Documents/6.813/PS2/src/index.html",
		"/Users/Julia/Documents/6.813/PS2/src/mainLayout.css",
		"/Users/Julia/Documents/6.813/PS2/src/rules.js",
		"/Users/Julia/Documents/para/js/src/models/data/Instance.js",
		"/Users/Julia/Documents/para/js/src/models/behaviors/FollowPathBehavior.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/behaviors/FollowPathBehavior.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/RootManager.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/views/drawing/CanvasView.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/data/GeometryNode.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/data/PathNode.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/views/drawing/ContextView.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/router.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/main.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/utils/Vec2D.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/PaperManager.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/data/BehaviorNode.js",
		"/Users/jejacobs/Desktop/test2.svg",
		"/Users/jejacobs/Desktop/test.svg",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/behaviors/CopyBehavior.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/behaviors/DistributeBehavior.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/StateManagerModel.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/utils/TrigFunc.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/behaviors/BaseBehavior.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/tools/ToolCollection.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/data/Instance.js",
		"/Users/jejacobs/Library/Application Support/Sublime Text 2/Packages/JsFormat/JsFormat.sublime-settings",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/behaviors/ParentBehavior.js",
		"/Users/jejacobs/Library/Application Support/Sublime Text 2/Packages/JsFormat/Default (OSX).sublime-keymap",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/css/basic.css",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/.gitignore",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/index.html",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/views/drawing/PropertyView.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/views/drawing/DrawingView.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/views/drawing/ToolView.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/data/TestNode.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/behaviors/BaseBehavior",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/Utils.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/Actions/ParentBehavior.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/lib/paper/examples/Tools/PathEditing.html",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/Actions/FollowPathAction",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/app.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/lib/paper/examples/Tools/BezierTool.html",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/index2.html",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/tools/ShapeToolModel.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/PaperManager",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/views/canvas.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/tools/PathTool.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/SceneNode.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/PathNode.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/GeometryNode.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/tools/ShapeToolModel",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/views/drawing/ObjectsView",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/.jshintrc",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/README.md",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/views/DrawingView.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/mygenerator.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/snode.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/pathsketch.html"
	],
	"find":
	{
		"height": 74.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"/Users/Julia/Documents/para/js/src",
			"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src",
			"",
			"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"member",
			"tojson",
			"toJSON:",
			"toJSON",
			"_.each",
			"inheritproperty",
			"accessproperty",
			"tojson",
			"inheritproperty",
			"tojson",
			"accessproperty",
			"json",
			"constrain_map",
			"tojson",
			"getvalue",
			"getselfcons",
			"getvalue",
			"inheritproperty",
			"accessproperty",
			"inheritors",
			"constrain_m",
			"tojson",
			"defaults",
			"attributes",
			"attribu",
			"translation_delta",
			"defaults",
			"tojson",
			"property",
			"scale",
			"startpoint",
			"startdist",
			"paper",
			"console.log",
			"startwidth",
			"operator",
			"scale",
			"updateOrigin",
			"console.l",
			"console.log",
			";\n",
			"\n        ",
			"console.log",
			"setOrigin",
			"updateOrigin",
			"\"",
			".follow",
			"follow",
			"checkDistanceIncrement",
			"toggleRotat",
			"c",
			"clear",
			".clear",
			"clearScaffolds",
			"position",
			".position",
			"update",
			"createInstanceFromPath: function(path)",
			"createInstanceAt",
			".update",
			".matrix",
			"update",
			".position",
			"increment",
			"console",
			"this.midpoint",
			"intersection",
			"\"",
			"console.log",
			"u_data",
			"\"",
			"instance_literal",
			"\"",
			"path_literal",
			"instance_literal",
			"getLiteral",
			"\"",
			"= 1",
			"=1",
			"containsPath",
			".selected =",
			"masterPath",
			"visible = false",
			"- 1",
			"-1",
			".anchor=true",
			"/* ",
			"rotation:",
			"delta",
			"updat",
			"clear",
			"setSelection",
			"              this.trigger('rootUpdate');\n",
			"checkDistanceIncrement",
			"render",
			"getLeft",
			"extendBehavior",
			"\"",
			"this.children",
			"checkIntersection",
			"check",
			"\"",
			"render",
			".anchors",
			"removeAnchors",
			"this.anchors ",
			"project.active",
			"prokect.active",
			"\"",
			"exclude",
			"\"",
			"intersec",
			"instance_literals.",
			", ",
			"'update'",
			"clearScaffolds",
			"clearScaffods",
			"clear",
			"drawAnchor",
			"console.log",
			"Vec2d",
			"\"",
			"event_bus",
			"eventBus",
			"'+",
			"BehaviorManagerModel",
			"\"",
			"boolB"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"'",
			"delta",
			".delta",
			"'",
			"data[i]",
			"'",
			"path_literal",
			"'",
			"master",
			"getMasterPath",
			"'",
			"extendBehaviorFirst",
			"'",
			"['update']",
			"Vec2D",
			"'",
			"propB",
			"propA",
			"'",
			"//console.log",
			"this.currentNode",
			"currentNode",
			".nodeParent",
			"'",
			"this.parent",
			"this.children",
			"children",
			"parent"
		],
		"reverse": true,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 13,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "js/src/models/tools/SelectToolModel.js",
					"settings":
					{
						"buffer_size": 10666,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5161.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "js/src/models/data/PolygonNode.js",
					"settings":
					{
						"buffer_size": 1703,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 211.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "js/src/models/data/RectNode.js",
					"settings":
					{
						"buffer_size": 2066,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 421.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "js/src/utils/PFloat.js",
					"settings":
					{
						"buffer_size": 2927,
						"regions":
						{
						},
						"selection":
						[
							[
								2896,
								2896
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1462.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "js/src/utils/PPoint.js",
					"settings":
					{
						"buffer_size": 4961,
						"regions":
						{
						},
						"selection":
						[
							[
								4669,
								4669
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "js/src/models/data/Instance.js",
					"settings":
					{
						"buffer_size": 28336,
						"regions":
						{
						},
						"selection":
						[
							[
								11905,
								11911
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7025.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "js/src/utils/PColor.js",
					"settings":
					{
						"buffer_size": 4312,
						"regions":
						{
						},
						"selection":
						[
							[
								4274,
								4274
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "js/src/models/data/PathNode.js",
					"settings":
					{
						"buffer_size": 7863,
						"regions":
						{
						},
						"selection":
						[
							[
								3064,
								3064
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 95.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "js/src/models/data/ListNode.js",
					"settings":
					{
						"buffer_size": 12393,
						"regions":
						{
						},
						"selection":
						[
							[
								189,
								189
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "js/src/models/data/ListSampler.js",
					"settings":
					{
						"buffer_size": 1051,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "js/src/models/data/Visitor.js",
					"settings":
					{
						"buffer_size": 11055,
						"regions":
						{
						},
						"selection":
						[
							[
								6972,
								6972
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4083.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "js/src/models/StateManagerModel.js",
					"settings":
					{
						"buffer_size": 25403,
						"regions":
						{
						},
						"selection":
						[
							[
								8441,
								8441
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3633.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "js/src/models/data/functions/FunctionNode.js",
					"settings":
					{
						"buffer_size": 6114,
						"regions":
						{
						},
						"selection":
						[
							[
								5879,
								5879
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2752.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "js/src/models/data/functions/FunctionManager.js",
					"settings":
					{
						"buffer_size": 4975,
						"regions":
						{
						},
						"selection":
						[
							[
								4801,
								4801
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2632.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"",
				"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/views/drawing/ToolView.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 231.0,
	"status_bar_visible": true
}
