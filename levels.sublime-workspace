{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"t",
				"tmatrix"
			],
			[
				"ne",
				"newVal"
			],
			[
				"ger",
				"generator"
			],
			[
				"ge",
				"generator"
			],
			[
				"comp",
				"compileTransforms"
			],
			[
				"pro",
				"prototype"
			],
			[
				"com",
				"compileTransforms"
			],
			[
				"render",
				"renderQueue"
			],
			[
				"data",
				"data"
			],
			[
				"lists",
				"listsToRender"
			],
			[
				"closed",
				"closedLists"
			],
			[
				"sele",
				"selectedInstances"
			],
			[
				"selected",
				"selectedShapes"
			],
			[
				"fun",
				"function"
			],
			[
				"sel",
				"selectedShapes"
			],
			[
				"shif",
				"shiftKey"
			],
			[
				"select",
				"selectTool"
			],
			[
				"se",
				"selectedShapes"
			],
			[
				"j",
				"jquery"
			],
			[
				"curr",
				"currentNode"
			],
			[
				"add",
				"addChildNode"
			],
			[
				"scre",
				"screen_bounds"
			],
			[
				"abs",
				"absolute_position"
			],
			[
				"scree",
				"screen_height"
			],
			[
				"renderS",
				"renderSelection"
			],
			[
				"inh",
				"inheritor_bbox"
			],
			[
				"renderG",
				"renderInheritorBoundingBox"
			],
			[
				"rend",
				"renderTransforms"
			],
			[
				"proto",
				"proto_node"
			],
			[
				"propert",
				"property_name"
			],
			[
				"insta",
				"instance_bbox"
			],
			[
				"instan",
				"instances"
			],
			[
				"ti",
				"ti_matrix"
			],
			[
				"path",
				"path_altered"
			],
			[
				"handle",
				"handleIn"
			],
			[
				"poin",
				"pointNode"
			],
			[
				"selec",
				"selectedShapes"
			],
			[
				"ref",
				"reference"
			],
			[
				"property",
				"propertyName"
			],
			[
				"get",
				"getValue"
			],
			[
				"inheri",
				"inheritProperty"
			],
			[
				"set",
				"setNull"
			],
			[
				"proper",
				"property"
			],
			[
				"prop",
				"property"
			],
			[
				"remove",
				"removeConstraint"
			],
			[
				"PCo",
				"PConstraint"
			],
			[
				"fi",
				"fill_color"
			],
			[
				"prope",
				"property_name"
			],
			[
				"str",
				"stroke_width"
			],
			[
				"c",
				"constraint"
			],
			[
				"P",
				"PProperty"
			],
			[
				"const",
				"constraint"
			],
			[
				"acces",
				"accessProperty"
			],
			[
				"in",
				"inherit"
			],
			[
				"pr",
				"property"
			],
			[
				"stroke",
				"stroke_weight"
			],
			[
				"stle",
				"style_data"
			],
			[
				"sty",
				"style_data"
			],
			[
				"dat",
				"data_property"
			],
			[
				"fill",
				"fill_color"
			],
			[
				"p",
				"property"
			],
			[
				"has",
				"hasOwnProperty"
			],
			[
				"co",
				"command"
			],
			[
				"rot",
				"rotation_delta"
			],
			[
				"rota",
				"rotation_constraint"
			],
			[
				"ro",
				"rotation_delta"
			],
			[
				"rotat",
				"rotation_delta"
			],
			[
				"rotation",
				"rotation_delta"
			],
			[
				"a",
				"alpha"
			],
			[
				"tool",
				"tool-mode"
			],
			[
				"mode",
				"modeChanged"
			],
			[
				"too",
				"tool-modifier"
			],
			[
				"inheritance",
				"inheritance_selection_color"
			],
			[
				"selecte",
				"selectedShapes"
			],
			[
				"transfo",
				"transformation"
			],
			[
				"copy",
				"copyInitialized"
			],
			[
				"tool-",
				"tool-modifier"
			],
			[
				"fu",
				"function"
			],
			[
				"modm",
				"modMatchClick"
			],
			[
				"modeStandar",
				"modeStandardClick"
			],
			[
				"border",
				"border-bottom"
			],
			[
				"marg",
				"margin-left"
			],
			[
				"inher",
				"inherit"
			],
			[
				"rotatio",
				"rotation_delta"
			],
			[
				"fil",
				"fill_color"
			],
			[
				"o",
				"override"
			],
			[
				"mod",
				"modifyPoints"
			],
			[
				"prot",
				"proto_node"
			],
			[
				"hand",
				"handleIn"
			],
			[
				"h",
				"handle-in"
			],
			[
				"seg",
				"segments"
			],
			[
				"hit",
				"hitResult"
			],
			[
				"pol",
				"polyPath"
			],
			[
				"pe",
				"penMouseDrag"
			],
			[
				"new",
				"new_master"
			],
			[
				"poi",
				"point_num"
			],
			[
				"PO",
				"PolygonNode"
			],
			[
				"geo",
				"geometrySelected"
			],
			[
				"strok",
				"stroke_color"
			],
			[
				"stro",
				"stroke_color"
			],
			[
				"inhe",
				"inherit"
			],
			[
				"reset",
				"resetStylesToPrototype"
			],
			[
				"sca",
				"scaling_delta"
			],
			[
				"tra",
				"translation_delta"
			],
			[
				"poly",
				"polyPath"
			],
			[
				"rec",
				"rectangle"
			],
			[
				"reg",
				"regularMouseDrag"
			],
			[
				"el",
				"ellipse"
			],
			[
				"to",
				"topLeft"
			],
			[
				"i_",
				"i_bottomRight"
			],
			[
				"Pap",
				"toPaperPoint"
			],
			[
				"top",
				"topLeft"
			],
			[
				"geome",
				"geometrySelected"
			],
			[
				"current",
				"currentView"
			],
			[
				"mast",
				"master_path"
			],
			[
				"trans",
				"translation_delta"
			],
			[
				"main",
				"mainView"
			],
			[
				"can",
				"canvasDblclick"
			],
			[
				"sub",
				"subView"
			],
			[
				"target",
				"targetPoint"
			],
			[
				"center",
				"centerGeom"
			],
			[
				"diff",
				"diffTarget"
			],
			[
				"con",
				"con_center"
			],
			[
				"caN",
				"canvasDown"
			],
			[
				"show",
				"shownPrototype"
			],
			[
				"getP",
				"getPrototypeById"
			],
			[
				"master",
				"master_path"
			],
			[
				"is",
				"isProto"
			]
		]
	},
	"buffers":
	[
		{
			"file": "js/src/models/StateManagerModel.js",
			"settings":
			{
				"buffer_size": 31058,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/data/PointNode.js",
			"settings":
			{
				"buffer_size": 1206,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/data/PathNode.js",
			"settings":
			{
				"buffer_size": 5322,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/data/ListNode.js",
			"settings":
			{
				"buffer_size": 5545,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/data/Instance.js",
			"settings":
			{
				"buffer_size": 22133,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/utils/PFloat.js",
			"settings":
			{
				"buffer_size": 2261,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/utils/PPoint.js",
			"settings":
			{
				"buffer_size": 4083,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/data/Generator.js",
			"settings":
			{
				"buffer_size": 2336,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 71 files for \"setRange\"\n\n/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/Generator.js:\n   36        },\n   37  \n   38:       setRange: function(start, end, loop) {\n   39          this.setStart(start);\n   40          this.setEnd(end);\n\n/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/StateManagerModel.js:\n  287            var generator = new Generator();\n  288            generator.addChildNode(list);\n  289:           generator.setRange(0, selectedShapes.length);\n  290  \n  291            visitor.addList(list);\n\n2 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 587,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "js/src/utils/PConstraint.js",
			"settings":
			{
				"buffer_size": 2359,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/data/Visitor.js",
			"settings":
			{
				"buffer_size": 7923,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/tools/SelectToolModel.js",
			"settings":
			{
				"buffer_size": 9347,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/views/drawing/CanvasView.js",
			"settings":
			{
				"buffer_size": 7637,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/src/models/data/SceneNode.js",
			"settings":
			{
				"buffer_size": 9954,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/* ConstraintToolModel.js\n * Model class for the constraint tools, which allows for the creation of basic constraints.\n * \n * The constraint tool works by allowing the user to construct a constraint through interaction\n * with the UI in stages, captured in this tool's code as states. The user can move through\n * the process by satisfying the requirements for a stage and then making a definitive indication\n * to the model to move to the next state ( currently, through an 'n' keypress ). Similarly,\n * they can move backwards through a 'b' keypress, or even return the state to the initial\n * by switching off the constraint tool. The stages of interaction are indicated below:\n *\n * 1) 'references': The user, just like with the selection tool, selects a set of instances\n *                  to have their properties constrained.\n *\n * 2) 'property':   Handles show up on a representative of the references selected representing\n *                  each primitive property of instances. The user can select a property \n *                  by clicking on it; this is the property of the references to constrain.\n *\n * 3) 'relatives':  The user, just like with the selection tool, selects a set of instances\n *                  to have their properties constrained to.\n *\n * 4) 'value':      The exact property to be constrained to for the relatives, based on a function\n *                  operating on a list of their properties, is specified. The exact UI\n *                  corresponding to the property as well as the means of selection vary between \n *                  properties; using position as an example, the UI elements are dashed horizontal\n *                  and vertical lines at the max, min, and avg x- and y-positions of the relatives.\n *                  Selection is done by clicking on one of the lines.\n *\n * 5) 'expression': The user types in an expression and chooses a relation in the UI elements that\n *                  appear in the Parameters menu. This expression then relates the reference \n *                  properties to the relative value specified. \n *\n *\n */\n\ndefine([\n    'underscore',\n    'paper',\n    'backbone',\n    'models/tools/BaseToolModel',\n    'utils/PPoint',\n    'utils/PaperUI',\n    'utils/PaperUIEvents',\n    'utils/Utils'\n], function(_, paper, Backbone, BaseToolModel, PPoint, PaperUI, PaperUIEvents, Utils) {\n\n  // hit testing for clicking Paper UI elements\n  var hitOptions = {\n    stroke: true,\n    bounds: true,\n    center: true,\n    tolerance: 3\n  };\n\n  // map property names for UI to instance properties to constrain\n  //\n  // NOTE: ideally this would be 1-1; i.e. constraining translation_delta\n  // would actually constrain position. In reality, an instance's position\n  // is based on both an original position AND a translation_delta. Thus\n  // making a position constraint really only constrains a delta for now.\n  // \n  // UPSHOT: there should be properties on the instance which directly \n  // relate to the properties to be constrained\n  var propToConstraintMap = {\n    'position': 'translation_delta',\n    'scale': 'scaling_delta',\n    'orientation': 'rotation_delta'\n  };\n\n  // model definition\n  var ConstraintToolModel = BaseToolModel.extend({\n \n    /*\n     * Creates attributes on the model for keeping track of the model's\n     * state.\n     */\n    defaults: _.extend({}, BaseToolModel.prototype.defaults, {\n      references: null,       // list of reference instances\n      relatives: null,        // list of relative instances\n      type: 'equal',          // relation for constraint\n      expression: '',         // the entered constraint expression\n      props_selected: null,   // a list of properties to be constrained\n      mode: 'references',     // indicator for current state\n      constrainToVal: [],     // array for specifying value constrained to\n    }),\n\n    /*\n     * Sets up the model.\n     */\n    initialize: function() {\n      BaseToolModel.prototype.initialize.apply(this, arguments);\n      this.set('references', []);\n      this.set('relatives', []);\n    },\n\n    /*\n     * Changes the constraint in state to reflect the selected relation (<, =, >).\n     * Currently only these three relations are supported, with names:\n     * 'less', 'equal', 'more'\n     * For convenience, they correspond to ids of UI elements.\n     *\n     * @param type - string for relation name\n     */\n    setConstraintType: function(type) {\n      this.set('type', type);\n      var result = {};\n      result['type'] = type;\n      console.log('[INFO] Selected Constraint Type: ' + type);\n      return type;\n    },\n\n    /*\n     * Changes the constraint in state to reflect comparison with the given expression. \n     * The expression is first validated and then set.\n     * \n     * @param exp - a string for the expression\n     */\n    setConstraintExpression: function(exp) {\n      var result = {};\n      if (this.validate(exp)) {\n        this.set('expression', exp);\n        result['expression'] = 'true';\n        console.log('[INFO] Valid Expression Entered: ' + exp);\n      } else {\n        result['expression'] = 'false';\n        console.log('[INFO] Invalid Expression Entered: ' + exp);\n      }\n      return result;\n    },\n\n    /*\n     * Validates the expression passed so that a constraint can be made.\n     * Validation should ensure that no injections are being made,\n     * since eval is used to evaluate the expression; it should also\n     * ensure that the expression is mathematically valid.\n     *\n     * @param exp - a string for the expression to validate\n     *\n     * TODO: IMPLEMENT THIS FUNCTION   \n     */\n    validate: function(exp) {\n      return true;\n    },\n\n    /*\n     * Sets the property that will be constrained in state. Note that \n     * these are only fundamental properties, such as position and scale.\n     *\n     * @param property - string for the name of the property to constrain\n     */\n    setConstraintProperty: function(property) {\n      // TODO: change this to adding to current set to allow for more than one selected constraint\n      var selected_props = [property];\n      var result = {};\n      result['property'] = property;\n      this.set('props_selected', selected_props);\n      console.log('Selected Constraint Property: ' + property);\n      return result;\n    },\n\n    /*\n     * Make sure the tool has a state which is workable. That is, relatives \n     * should not exist without references, etc.\n     *\n     * TODO: IMPLEMENT THIS FUNCTION\n     */\n    validateState: function() {\n\n    },\n\n    /*\n     * Move the state of the tool forward to allow for the next stage\n     * in constraint creation. Ensures that the current state's info\n     * is saved into state so that the next stage is meaningful.\n     *\n     */\n    advance: function() {\n      var state = this.get('mode');\n      switch ( state ) {\n        case 'references':\n          this.get('sm').delegateMethod('select', 'saveSelection');\n          this.set('mode', 'property');\n          console.log('[INFO] Advanced constraint tool mode to property');\n          break;\n        case 'property':\n          this.set('mode', 'relatives');\n          console.log('[INFO] Advanced constraint tool mode to relatives');\n          break;\n        case 'relatives':\n          this.set('mode', 'value');\n          console.log('[INFO] Advanced constraint tool mode to value');\n          break;\n        case 'value':\n          this.set('mode', 'expression');\n          console.log('[INFO] Advanced constraint tool mode to expression');\n          break;\n        case 'expression':\n          this.createConstraint();\n          this.clearState();\n          console.log('[INFO] Reset constraint tool state');\n          break; \n      }\n    },\n\n    /*\n     * Takes a list of instances, checks their validity, and sets them \n     * in the constraint tool reference state.\n     *\n     * @param instanceList - a list of instances\n     */\n    referencesSelection: function( instanceList ) {\n      if ( instanceList.length > 0 ) {\n        this.set('references', instanceList);\n      }\n    },\n\n    /*\n     * Takes a list of instances, checks their validity, and sets them \n     * in the constraint tool relatives state.\n     *\n     * @param instanceList - a list of instances\n     */\n    relativesSelection: function( instanceList ) {\n      if ( instanceList.length > 0 ) {\n        this.set('relatives', instanceList);\n      }\n    },\n    \n    /*\n     * Uses the constraint tool state which has been specified through\n     * the stages of interaction to construct the constraint on the \n     * references and relatives as desired. \n     */\n    createConstraint: function() {\n      var constrainToVal = this.get('constrainToVal');\n      var references = this.get('references');\n      var relatives = this.get('relatives');\n      var expression = this.get('expression');\n      var generator = references[0].getGenerator();\n      \n      var refPropList = Utils.getPropConstraintFromList( references, constrainToVal.slice(1, constrainToVal.length) );\n      var refProp = refPropList[0];\n      var relPropList = Utils.getPropConstraintFromList( relatives, constrainToVal.slice(1, constrainToVal.length) ); \n      console.log(\"relList\",relPropList,\"refProp\",refProp);\n\n      var relativeF = function() {\n        var x = Utils[constrainToVal[0]]( relPropList.map( function( prop ) { return prop.getValue(); }));\n        if(generator){\n          var i = generator.getValue();\n          \n          console.log('constraint value of i:',i);\n\n        }\n        var evaluation = eval( expression );\n        refProp.setValue( evaluation );\n        return evaluation;  \n      };\n\n      refProp.setConstraint(relativeF);\n\n\n      /* \n      var relDeltaList = Utils.getPropConstraintFromList( relatives, rewordToVal.slice(1, rewordToVal.length) );\n      var relativeDeltaF = function() {\n        var x = Utils[rewordToVal[0]]( relDeltaList.map( function( prop ) { return prop.getValue() }));\n        var evaluation = eval( expression );\n        refDelta.setValue( evaluation );\n        return evaluation; \n      };\n\n      refDelta.setConstraint( relativeF );*/\n    },\n\n   /* createListConstraint: function(){\n  \n      var constrainToVal = this.get('constrainToVal');\n      var references = this.get('references');\n      var relatives = this.get('relatives');\n      var expression = this.get('expression');\n      var generator = references[0].getGenerator();\n\n      var refPropList = Utils.getPropConstraintFromList( references, constrainToVal.slice(1, constrainToVal.length) );\n      var refProp = refPropList[0];\n      var relPropList = Utils.getPropConstraintFromList( relatives, constrainToVal.slice(1, constrainToVal.length) ); \n      console.log(\"relList\",relPropList,\"refProp\",refProp);\n\n      var relativeF = function() {\n        var x = Utils[constrainToVal[0]]( relPropList.map( function( prop ) { return prop.getValue(); }));\n        var i = generator.getValue();\n        var evaluation = eval( expression );\n        refProp.setValue( evaluation );\n        return evaluation;  \n      };\n\n      refProp.setConstraint(relativeF);\n    },*/\n\n    /*\n     * Rewords the specified value to be constrained to (a property list)\n     * so that the terms used in the UI (scale, position) map to instance\n     * properties.\n     *\n     * NOTE: Ideally, this should never have to be used.  \n     */\n    rewordConstraint: function() {\n      var constrainToVal = this.get('constrainToVal');\n      for (var i = 0; i < constrainToVal.length; i++) {\n        if (constrainToVal[i] in propToConstraintMap) {\n          constrainToVal[i] = propToConstraintMap[constrainToVal[i]];\n        }\n      }\n    },\n\n    /*\n     * Handles mouseDown events on the canvas when the constraint tool is\n     * being used. For each different state of the tool, the event is \n     * handled appropriately.\n     *\n     * state 'references': delegate mouseDown events to the selection tool\n     *                     for selection of reference instances\n     *\n     * state 'property':   do nothing\n     *\n     * state 'relatives':  delegate mouseDown events to the selection tool\n     *                     for selection of relative instances\n     * \n     * state 'value':      test for hits on UI elements that specify value\n     *                     to constrain to\n     *\n     * state 'expression': do nothing\n     */\n    mouseDown: function(event) {\n      var state = this.get('mode');\n      switch ( state ) {\n        case 'references':\n          // TODO: check if selection already exists, set to references if so, OR clear selections when constraint tool selected\n          var sm = this.get('sm');\n          this.get('sm').delegateMethod('select', 'mouseDown', event);\n          var references = this.get('sm').delegateMethod('select', 'getCurrentSelection');\n          this.referencesSelection( references );\n          break;\n        case 'relatives':\n          this.get('sm').delegateMethod('select', 'mouseDown', event);\n          var references = this.get('references'); \n          var relatives = this.get('sm').delegateMethod('select', 'getCurrentSelection');\n          this.relativesSelection( relatives );\n          //this.get('sm').constrain( references[0], relatives[0] );\n          PaperUI.drawPositionDelimiters( references, relatives, {'max-translation_delta-x': true, 'max-translation_delta-y': true, 'avg-translation_delta-x': true, 'avg-translation_delta-y': true, 'min-translation_delta-x': true, 'min-translation_delta-y': true});\n          break;\n        case 'value':\n          var hitResult = paper.project.hitTest(event.point, hitOptions);\n          if ( hitResult ) {\n            var path = hitResult.item;\n            if ( path.name.indexOf( 'delimit' ) === 0 ) {\n              var propSplit = path.name.split('-');\n              propSplit = propSplit.slice( 1, propSplit.length );\n              this.set( 'constrainToVal', propSplit );\n              this.rewordConstraint();\n            }\n          }\n          break;\n        case 'expression':\n          // TODO: check if expression has been submitted?\n          break; \n      } \n    \n    },\n\n    mouseDrag: function(event) {\n            \n    },\n\n    dblClick: function(event) {\n      \n    },\n\n    mouseUp: function(event) {\n      \n    },\n\n    mouseMove: function(event) {\n\n    },\n\n    /*\n     * Resets the state of the constraint tool so that it is as if it has\n     * just been selected, or is not selected at all, and removes all UI \n     * elements associated with it. \n     */\n    clearState: function() {\n      this.get('sm').delegateMethod('select', 'resetSelections');\n      this.set('references', []);\n      this.set('relatives', []);\n      this.set('type', 'equal');\n      this.set('expression', '');\n      this.set('props_selected', []);\n      this.set('mode', 'references');\n      PaperUI.clear();\n    }, \n \n\n\n    /*\n     *  Constraint Tool UI Listeners, passed to Para UI\n     */\n\n    /*\n     *\n     */\n    delimiterHighlight: function( event ) {\n      var path = event.target;\n      // TODO: be pickier about these style changes \n      path.strokeColor = 'red'; \n      path.strokeWidth = 1.3*path.strokeWidth;  \n    },\n    \n    /*\n     *\n     */\n    delimiterSelect: function( event ) {\n      var path = event.target;\n      // TODO: be pickier about these style changes\n      path.strokeColor = 'blue';\n      path.strokeWidth = 1.3*path.strokeWidth;\n      this.set('constrainToVal', path.getName()); // TODO: implement path.getName, prob by extending Paper path \n    }\n  \n  });\n\n  \n\n\n\n  return ConstraintToolModel;\n\n});  \n\n    \n",
			"file": "js/src/models/tools/ConstraintToolModel.js",
			"file_size": 15519,
			"file_write_time": 1423774754000000,
			"settings":
			{
				"buffer_size": 15531,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 87.0,
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"js",
				"JSHint"
			],
			[
				"j",
				"JSHint"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 514.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/datatype/Generator.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/utils/PPoint.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/tools/SelectToolModel.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/PointNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/RectNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/SceneNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/views/drawing/PropertyView.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/utils/PColor.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/utils/PFloat.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/views/drawing/ContextView.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/utils/Utils.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/utils/PaperUI.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/router.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/utils/ColorUtils.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/utils/PBool.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/datatype/:*Function Node",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/Instance.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/tools/ConstraintToolModel.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/PathNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/PolygonNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/utils/PConstraint.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/EllipseNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/ShapeNode.js",
		"/Users/jennifermaryjacobs/Library/Application Support/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/StateManagerModel.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/utils/TrigFunc.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/utils/PProperty.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/actions/TransformationNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/tools/PenToolModel.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/tools/BaseToolModel.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/style/para.css",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/views/drawing/ToolView.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/bower.json",
		"/Users/jennifermaryjacobs/Documents/work/code/para/Gruntfile.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/actions/RotateNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/PConstraint.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/html/ui.html",
		"/Users/jennifermaryjacobs/Documents/work/code/para/para-build.html",
		"/Users/jennifermaryjacobs/Documents/work/code/para/para.html",
		"/Users/jennifermaryjacobs/Documents/work/code/para/build/para.html",
		"/Users/jennifermaryjacobs/Documents/work/code/para/bower_components/constraintjs/test/resources/qunit-1.12.0.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/PProperty.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/config.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/Condition.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/views/drawing/CanvasView.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/.jscsrc",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/uiloader.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/app.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/views/drawing/ProtoView.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/GeometryNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/tools/PolyToolModel.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/Visitor.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/texput.log",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/EllipseNode",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/GroupNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/actions/InitializeNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/Edge.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/tools/ToolCollection.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/bower_components/jqueryui/themes/base/resizable.css",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/DistributeBehavior.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/GaussianBehavior.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/RadialDistributeBehavior.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/FollowPathBehavior.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/ShapeGenerator.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/tools/FollowPathToolModel.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/tools/ImportToolModel.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/PaperManager.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/tools/RotateToolModel.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/actions/ScaleNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/build/style/para.css",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/BaseBehavior.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/actions/GeneratorNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/actions/BlockNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/actions/BaseNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/build/style/jqueryui/images/ui-icons_cd0a0a_256x240.png",
		"/Users/jennifermaryjacobs/Documents/work/code/para/bower_components/jqueryui/themes/base/theme.css",
		"/Users/jennifermaryjacobs/Documents/work/code/para/README.md",
		"/Users/jennifermaryjacobs/Documents/work/code/para/levels.sublime-workspace",
		"/Users/jennifermaryjacobs/Documents/work/code/para/index.html",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/RootManager.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/fonts/SourceSansPro-ExtraLight.otf.woff",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/InstanceGroupNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/utils/analytics.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/BehaviorManagerModel.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/actions/TranslateNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/ProcedureEditor.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/CopyNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/actions/BlockNode.js\nBlockNode.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/Generator.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/CopyBehavior.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/FillBehavior",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/scaffold.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/behaviors/ScaleBehavior.js",
		"/Users/jennifermaryjacobs/Documents/work/code/para/js/src/models/data/BehaviorNode.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/behaviors/FollowPathBehavior.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/RootManager.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/views/drawing/CanvasView.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/data/GeometryNode.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/data/PathNode.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/views/drawing/ContextView.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/router.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/main.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/utils/Vec2D.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/PaperManager.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/data/BehaviorNode.js",
		"/Users/jejacobs/Desktop/test2.svg",
		"/Users/jejacobs/Desktop/test.svg",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/behaviors/CopyBehavior.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/behaviors/DistributeBehavior.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/StateManagerModel.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/utils/TrigFunc.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/behaviors/BaseBehavior.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/tools/ToolCollection.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/data/Instance.js",
		"/Users/jejacobs/Library/Application Support/Sublime Text 2/Packages/JsFormat/JsFormat.sublime-settings",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/behaviors/ParentBehavior.js",
		"/Users/jejacobs/Library/Application Support/Sublime Text 2/Packages/JsFormat/Default (OSX).sublime-keymap",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/css/basic.css",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/.gitignore",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/index.html",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/views/drawing/PropertyView.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/views/drawing/DrawingView.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/views/drawing/ToolView.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/data/TestNode.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/behaviors/BaseBehavior",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/Utils.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src/models/Actions/ParentBehavior.js",
		"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/lib/paper/examples/Tools/PathEditing.html"
	],
	"find":
	{
		"height": 123.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"/Users/jennifermaryjacobs/Documents/work/code/para/js/src",
			"/Users/jennifermaryjacobs/Documents/work/code/para/",
			"/Users/jennifermaryjacobs/Documents/work/code/para/js/src",
			"/Users/jennifermaryjacobs/Documents/work/code/para/",
			"/Users/jennifermaryjacobs/Documents/work/code/para/js/src",
			"<open files>,/Users/jennifermaryjacobs/Documents/work/code/para/js/src",
			"<open files>",
			"/Users/jennifermaryjacobs/Documents/work/code/para/js/src",
			"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src",
			"",
			"/Users/jejacobs/Documents/Adobe/dev/sketches/sketch1/js/src",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\n      ",
			"'end'",
			"'end",
			"'start'",
			"setRange",
			"proto_node",
			"accessProperty",
			"start",
			"grop",
			"modify",
			"modifyProp",
			"modifyPropert",
			"modifyProperty",
			"accessValue",
			"listsToRender",
			"visitList",
			") ",
			"rootNode",
			"render:",
			"isNull",
			"console.log(",
			"'constrained",
			"'constraint_set'",
			"setConstraint:",
			"getListMember",
			"splice",
			"map",
			"get('lists')",
			"closeSelectedGroups",
			"group",
			"screen_top_left",
			"'screen_top_left'",
			"this.set('scre",
			"this.get('top_left",
			"color_ind",
			"getSelectionColor",
			"console.log",
			"hasMember",
			"'selected_indexes",
			"render",
			"geometrySel",
			"groupKey",
			"groupKey\\",
			".clear",
			"pathReferences",
			"drawPositionDelimiters",
			"Utils",
			"setConstraintExpression",
			"this.set('expression",
			"this.set('references",
			"references",
			"showWheel",
			"sel_palette_index",
			"'inheritor_bbox",
			"instance_",
			"updateBoundingBox",
			"compile:",
			"compile",
			"primary_selection_color",
			"this.get('bbox",
			"compile:",
			"createInstance",
			"PaperUI",
			"new paper.",
			" new paper.",
			"compile",
			"complie",
			"addInstance",
			"selected",
			"set('i_",
			"console.l",
			"compile",
			"normalizePath",
			"modifyPoints",
			"normalizePath",
			"constraintTool",
			"group",
			"grou",
			"edge",
			"visit",
			"PPoint",
			"Instance",
			"PathNode",
			"GeometryNode",
			"cmdKeu",
			"altKey",
			"getR",
			".val",
			"getValue",
			"removeConstraint",
			"getConstraint",
			"inheritPr",
			"console.log",
			"modify",
			"accessProperty",
			"inheritProperty",
			"inheritConstraint",
			"inheritProperty",
			"inheritConstraint",
			".call",
			"prototype.call",
			"'alpha",
			"set('alpha'",
			".set('alpha",
			".set('alpha'",
			"animateALpha",
			"console.log",
			"console.olg",
			"setNull",
			"isNull",
			"modifyProperty",
			"modify",
			"exportJSOn",
			"setToolStyle",
			"stroke_wei",
			"styleModified",
			"console.log('selected tool style =',selectedTool.get('style'));",
			"console.log(\"selected",
			"console.log(selected",
			".prototype.",
			"accessProperty",
			"PProperty",
			"console.log",
			".val",
			"fill_colorR",
			" fill_colorR",
			"fillColorR",
			"inheritProperty"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"'end_val'",
			"'start_val'",
			"listsToCompile",
			"normalizeGeometry",
			".getY()",
			".getX()",
			"operator",
			"inheritance_selection_color",
			"'translation'",
			"Override",
			"is_proto",
			"geometrySelected",
			"modifyDelta",
			"geometryModified",
			"'rotate'",
			"'select'",
			".inside",
			"'rotation_node'",
			"'proto_node'",
			"'rotation_node'",
			"'rotate_node'",
			"'proto_node'",
			"proto_node",
			"reset_matrix",
			"literals",
			"stroke_color",
			"",
			"scaling",
			"PPoint",
			"'",
			"delta",
			".delta",
			"'",
			"data[i]",
			"'",
			"path_literal",
			"'",
			"master",
			"getMasterPath",
			"'",
			"extendBehaviorFirst",
			"'",
			"['update']",
			"Vec2D",
			"'",
			"propB",
			"propA",
			"'",
			"//console.log",
			"this.currentNode",
			"currentNode",
			".nodeParent",
			"'",
			"this.parent",
			"this.children",
			"children",
			"parent"
		],
		"reverse": true,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "js/src/models/StateManagerModel.js",
					"settings":
					{
						"buffer_size": 31058,
						"regions":
						{
						},
						"selection":
						[
							[
								8744,
								8744
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 4652.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "js/src/models/data/PointNode.js",
					"settings":
					{
						"buffer_size": 1206,
						"regions":
						{
						},
						"selection":
						[
							[
								464,
								464
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 17.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "js/src/models/data/PathNode.js",
					"settings":
					{
						"buffer_size": 5322,
						"regions":
						{
						},
						"selection":
						[
							[
								3386,
								3396
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1470.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "js/src/models/data/ListNode.js",
					"settings":
					{
						"buffer_size": 5545,
						"regions":
						{
						},
						"selection":
						[
							[
								3550,
								3550
							],
							[
								3602,
								3602
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1866.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "js/src/models/data/Instance.js",
					"settings":
					{
						"buffer_size": 22133,
						"regions":
						{
						},
						"selection":
						[
							[
								9898,
								9898
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2591.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "js/src/utils/PFloat.js",
					"settings":
					{
						"buffer_size": 2261,
						"regions":
						{
						},
						"selection":
						[
							[
								795,
								795
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 110.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "js/src/utils/PPoint.js",
					"settings":
					{
						"buffer_size": 4083,
						"regions":
						{
						},
						"selection":
						[
							[
								1582,
								1582
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 430.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 7,
			"sheets":
			[
				{
					"buffer": 7,
					"file": "js/src/models/data/Generator.js",
					"settings":
					{
						"buffer_size": 2336,
						"regions":
						{
						},
						"selection":
						[
							[
								568,
								568
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"settings":
					{
						"buffer_size": 587,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										156,
										164
									],
									[
										477,
										485
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "js/src/utils/PConstraint.js",
					"settings":
					{
						"buffer_size": 2359,
						"regions":
						{
						},
						"selection":
						[
							[
								2092,
								2092
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1087.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "js/src/models/data/Visitor.js",
					"settings":
					{
						"buffer_size": 7923,
						"regions":
						{
						},
						"selection":
						[
							[
								2155,
								2155
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2698.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "js/src/models/tools/SelectToolModel.js",
					"settings":
					{
						"buffer_size": 9347,
						"regions":
						{
						},
						"selection":
						[
							[
								1098,
								1098
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4045.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "js/src/views/drawing/CanvasView.js",
					"settings":
					{
						"buffer_size": 7637,
						"regions":
						{
						},
						"selection":
						[
							[
								4316,
								4316
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1252.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "js/src/models/data/SceneNode.js",
					"settings":
					{
						"buffer_size": 9954,
						"regions":
						{
						},
						"selection":
						[
							[
								7162,
								7170
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4538.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "js/src/models/tools/ConstraintToolModel.js",
					"settings":
					{
						"buffer_size": 15531,
						"regions":
						{
						},
						"selection":
						[
							[
								14790,
								14795
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6298.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.485593075286,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 108.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"polygon",
				"js/src/models/data/PolygonNode.js"
			],
			[
				"",
				"js/src/views/drawing/ToolView.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 331.0,
	"status_bar_visible": true
}
